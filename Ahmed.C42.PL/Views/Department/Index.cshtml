@model IEnumerable<DepartmentDto>
@{
    ViewData["Title"] = "Departments";
}

<h1>All Departments</h1>
<br />
<br />

<a asp-controller="Department" asp-action="Create" class="btn btn-primary">Create New Department</a>

<br />



@if (Model.Count() > 0)
{
    <table class="mt-4 table table-striped table-hover">
        <thead class="text-center">
            <tr>
                <th>@Html.DisplayNameFor(D => D.Code)</th>@*used to generate the display name for a specific property of your model  [Display(Name = "Date Of Creation")]  *@
                <th>@Html.DisplayNameFor(D => D.Name)</th>
                <th>@Html.DisplayNameFor(D => D.CreationDateTime)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody class="text-center">
            @foreach (var department in Model)
            {
                <tr>
                    <td>@department.Name</td>
                    <td>@department.Code</td>
                    <td>@department.CreationDateTime</td>

                    @* <partial name="_IndexButtonsPartial" model="@department.Id" /> <!-- sutable for send one property --> *@


                    @Html.Partial("_IndexButtonsPartial", new DepartmentDto { Id = department.Id, Name = department.Name })
                    @* @await Html.PartialAsync("_IndexButtonsPartial", new ActionButtonsViewModel { Id = department.Id, Name = department.Name}) *@



                </tr>

            }
        </tbody>
    </table>
}
else
{
    <div class="mt-4 alert alert-warning">
        <h3>There Is No Departments :(</h3>
    </div>

}

@if (!string.IsNullOrEmpty(TempData["Success"] as string))
{
    <div class="w-25 bg-light" style="position: fixed; right: 0; bottom: 0">
        <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" id="successToast">
            <div class="toast-header">
                <strong class="me-auto">Saeed</strong>
                <small>Just now</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Success"]
            </div>
        </div>
    </div>
}

<script>
    window.onload = function () {
        var toastElement = document.getElementById('successToast');
        var toast = new bootstrap.Toast(toastElement);

        toast.show(); // Show the toast notification

        // Auto-hide after 5 seconds
        setTimeout(function () {
            toast.hide();
        }, 15000);
    };
</script>


