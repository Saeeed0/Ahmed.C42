@model IEnumerable<EmployeeDto>

@{
    ViewData["Title"] = "All Employees";
}

<h1>@ViewData["Title"]</h1>

<br />
<br />
<a asp-action="Create" class="btn btn-primary">Create New Employee</a>
<br />
<br />

<!-- Search Form -->
@* <form asp-action="Index" method="get" class="mt-5 row justify-content-center align-items-center ">
    <div class="row col-8 mb-2">
        <div class="col-8">
            <input type="text" class="form-control" id="search" name="search" placeholder="Enter Employee Name" />
        </div>
        <div class="col-4">
            <button type="submit" class="btn btn-success mb-2">Search</button>
        </div>
    </div>
</form> *@
@* <form asp-action="Index" id="searchForm" method="get" class="mt-5 row justify-content-center">
    <div class="col-6 mb-2">
        <input type="text" class="form-control" id="search" name="search" placeholder="Enter Employee Name" />
    </div>
    <div class="col-2 mb-2">
        <button type="submit" class="btn btn-success w-100">Search</button>
    </div>
</form> *@

<!-- Search Form -->
<form id="searchForm" method="get" class="mt-5 row justify-content-center align-items-center">
    <div class="row col-8 mb-2">
        <div class="col-8">
            <input type="text" class="form-control" id="search" name="search" placeholder="Enter Employee Name" />
        </div>
        <div class="col-4">
            <button type="submit" class="btn btn-success mb-2">Search</button>
        </div>
    </div>
</form>
<hr />

<br />
@if (Model.Count() > 0 @* Model.Any() *@)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Age)</th>
                <th>@Html.DisplayNameFor(model => model.Salary)</th>
                <th>@Html.DisplayNameFor(model => model.IsActive)</th>
                <th>@Html.DisplayNameFor(model => model.Email)</th>
                <th>@Html.DisplayNameFor(model => model.Department)</th>
                <th>@Html.DisplayNameFor(model => model.Gender)</th>
                <th>@Html.DisplayNameFor(model => model.EmployeeType)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>


        <!-- Employee List -->
        <tbody id="employeeList">

            @foreach (var employee in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => employee.Name)</td>
                    <td>@Html.DisplayFor(modelItem => employee.Age)</td>
                    <td>@Html.DisplayFor(modelItem => employee.Salary)</td>
                    <td>@Html.DisplayFor(modelItem => employee.IsActive)</td>
                    <td>@Html.DisplayFor(modelItem => employee.Email)</td>
                    <td>@Html.DisplayFor(modelItem => employee.Department)</td>
                    <td>@Html.DisplayFor(modelItem => employee.Gender)</td>
                    <td>@Html.DisplayFor(modelItem => employee.EmployeeType)</td>

                    @* <partial name="_IndexButtonsPartial" model="employee.Id" /> <!-- sutable for send one property --> *@


                    @* @Html.Partial("_IndexButtonsPartial", new EmployeeDto { Id = employee.Id, Name = employee.Name }) *@
                    @Html.Partial("_IndexButtonsPartial", new ActionButtonsViewModel { Id = employee.Id, Name = employee.Name })

                </tr>
            }

            @* <div id="employeeList">
        <partial name="Partial/_EmployeeListPartial" model="@Model" />
        </div> *@
            <!-- This will be replaced by the partial view rows -->
            @* @Html.Partial("Partial/_EmployeeListPartial", Model) *@

        </tbody>
    </table>
}
else
{
    @* <div class="mt-4 alert alert-warning">
        <h3>There are no employees :(</h3>
    </div> *@
    <div class="alert alert-warning">No employees found.</div>
}
